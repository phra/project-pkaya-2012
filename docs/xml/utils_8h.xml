<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="utils_8h" kind="file">
    <compoundname>utils.h</compoundname>
    <includedby refid="exception_8c" local="yes">C:/Users/phra/Desktop/progetto_so/src/exception.c</includedby>
    <includedby refid="init_8h" local="yes">C:/Users/phra/Desktop/progetto_so/src/init.h</includedby>
    <includedby refid="scheduler_8h" local="yes">C:/Users/phra/Desktop/progetto_so/src/scheduler.h</includedby>
    <includedby refid="exception_8h" local="yes">C:/Users/phra/Desktop/progetto_so/src/exception.h</includedby>
    <includedby refid="syscall_8h" local="yes">C:/Users/phra/Desktop/progetto_so/src/syscall.h</includedby>
    <includedby refid="interrupt_8h" local="yes">C:/Users/phra/Desktop/progetto_so/src/interrupt.h</includedby>
    <includedby refid="init_8c" local="yes">C:/Users/phra/Desktop/progetto_so/src/init.c</includedby>
    <includedby refid="interrupt_8c" local="yes">C:/Users/phra/Desktop/progetto_so/src/interrupt.c</includedby>
    <includedby refid="asl_8c" local="yes">C:/Users/phra/Desktop/progetto_so/src/lib/asl.c</includedby>
    <includedby refid="pcb_8c" local="yes">C:/Users/phra/Desktop/progetto_so/src/lib/pcb.c</includedby>
    <includedby refid="scheduler_8c" local="yes">C:/Users/phra/Desktop/progetto_so/src/scheduler.c</includedby>
    <includedby refid="syscall_8c" local="yes">C:/Users/phra/Desktop/progetto_so/src/syscall.c</includedby>
    <invincdepgraph>
      <node id="306">
        <label>C:/Users/phra/Desktop/progetto_so/src/lib/asl.c</label>
        <link refid="asl_8c"/>
      </node>
      <node id="296">
        <label>C:/Users/phra/Desktop/progetto_so/src/exception.c</label>
        <link refid="exception_8c"/>
      </node>
      <node id="299">
        <label>C:/Users/phra/Desktop/progetto_so/src/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
      </node>
      <node id="303">
        <label>C:/Users/phra/Desktop/progetto_so/src/scheduler.c</label>
        <link refid="scheduler_8c"/>
      </node>
      <node id="298">
        <label>C:/Users/phra/Desktop/progetto_so/src/scheduler.h</label>
        <link refid="scheduler_8h"/>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
      </node>
      <node id="304">
        <label>C:/Users/phra/Desktop/progetto_so/src/interrupt.c</label>
        <link refid="interrupt_8c"/>
      </node>
      <node id="301">
        <label>C:/Users/phra/Desktop/progetto_so/src/interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
      </node>
      <node id="302">
        <label>C:/Users/phra/Desktop/progetto_so/src/init.c</label>
        <link refid="init_8c"/>
      </node>
      <node id="297">
        <label>C:/Users/phra/Desktop/progetto_so/src/init.h</label>
        <link refid="init_8h"/>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
      </node>
      <node id="307">
        <label>C:/Users/phra/Desktop/progetto_so/src/lib/pcb.c</label>
        <link refid="pcb_8c"/>
      </node>
      <node id="305">
        <label>C:/Users/phra/Desktop/progetto_so/src/syscall.c</label>
        <link refid="syscall_8c"/>
      </node>
      <node id="300">
        <label>C:/Users/phra/Desktop/progetto_so/src/syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
      </node>
      <node id="295">
        <label>C:/Users/phra/Desktop/progetto_so/src/lib/utils.h</label>
        <link refid="utils.h"/>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="utils_8h_1aa7439c3a4d37f53dcb946c7616592cf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memset</definition>
        <argsstring>(void *ptr, int val, unsigned int len)</argsstring>
        <name>memset</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>memset(puntatore a void, valore da assegnare, quantit√† dei byte da scrivere): setta il valore val da *ptr a *ptr + len. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>indirizzo dell&apos;area di memoria da scrivere </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>valore da scrivere </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensione </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/phra/Desktop/progetto_so/src/lib/utils.h" line="3" bodyfile="C:/Users/phra/Desktop/progetto_so/src/lib/utils.c" bodystart="7" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1aa5f66c64cb19c1c7a986f05185e93030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int memcmp</definition>
        <argsstring>(void *ptr1, void *ptr2, int lenght)</argsstring>
        <name>memcmp</name>
        <param>
          <type>void *</type>
          <declname>ptr1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lenght</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>memcmp(puntatore a void, puntatore a void, lunghezza da confrontare): confronta le due aree di memoria ritorna l&apos;n-esimo byte da cui differiscono oppure in caso di uguaglianza ritorna 0 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr1</parametername>
</parameternamelist>
<parameterdescription>
<para>primo indirizzo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr2</parametername>
</parameternamelist>
<parameterdescription>
<para>secondo indirizzo </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lenght</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensione </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 se sono diversi, 0 altrimenti </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/phra/Desktop/progetto_so/src/lib/utils.h" line="4" bodyfile="C:/Users/phra/Desktop/progetto_so/src/lib/utils.c" bodystart="25" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1a8282d1135f313d4ede39f567094120f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void memcpy</definition>
        <argsstring>(void *dest, void *src, int lenght)</argsstring>
        <name>memcpy</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lenght</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/phra/Desktop/progetto_so/src/lib/utils.h" line="5"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1a9896699f331c8da8f438f606832f31db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int strlen</definition>
        <argsstring>(char *str)</argsstring>
        <name>strlen</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>strlen(puntatore a char): ritorna il numero di char in una stringa ASCII senza contare lo zero terminatore <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>puntatore alla stringa zeroterminata </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>lunghezza della stringa senza &apos;\0&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/phra/Desktop/progetto_so/src/lib/utils.h" line="6" bodyfile="C:/Users/phra/Desktop/progetto_so/src/lib/utils.c" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1a57b18ef9eecf3a059b3138b3806868bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int strcmp</definition>
        <argsstring>(char *str1, char *str2)</argsstring>
        <name>strcmp</name>
        <param>
          <type>char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>strcmp(puntatore a char, puntatore a char): confronta le due stringhe ritorna 0 in caso di uguaglianza, -1 altrimenti <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str1</parametername>
</parameternamelist>
<parameterdescription>
<para>puntatore alla prima stringa </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str2</parametername>
</parameternamelist>
<parameterdescription>
<para>puntatore alla seconda stringa </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 se uguali, 1 altrimenti </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/phra/Desktop/progetto_so/src/lib/utils.h" line="7" bodyfile="C:/Users/phra/Desktop/progetto_so/src/lib/utils.c" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1af9af30bd4e6b10d1560aabd834144e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void strcpy</definition>
        <argsstring>(char *dest, char *src)</argsstring>
        <name>strcpy</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>strcpy(puntatore a char, puntatore a char): trascrive una stringa <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>destinazione </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>sorgente </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/phra/Desktop/progetto_so/src/lib/utils.h" line="8" bodyfile="C:/Users/phra/Desktop/progetto_so/src/lib/utils.c" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1a01264c39e4ef8945e436d9a9a51e3ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void strreverse</definition>
        <argsstring>(char *begin, char *end)</argsstring>
        <name>strreverse</name>
        <param>
          <type>char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>strreverse(puntatore a char, puntatore a char): rovescia una stringa <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>inizio stringa </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>fine stringa </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/phra/Desktop/progetto_so/src/lib/utils.h" line="9" bodyfile="C:/Users/phra/Desktop/progetto_so/src/lib/utils.c" bodystart="109" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1a0338f8f78dbf81dc70849a16e3ec22bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void itoa</definition>
        <argsstring>(int value, char *str, int base)</argsstring>
        <name>itoa</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>itoa(valore, puntatore della stringa, base in cui convertire) : converte un intero in una stringa nella base specificata <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>intero da convertire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>indirizzo dove scrivere la stringa </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>base in cui convertire l&apos;intero </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/phra/Desktop/progetto_so/src/lib/utils.h" line="10" bodyfile="C:/Users/phra/Desktop/progetto_so/src/lib/utils.c" bodystart="123" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__UTILS__</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__UTILS__</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_8c_1aa7439c3a4d37f53dcb946c7616592cf4" kindref="member">memset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="utils_8c_1aa5f66c64cb19c1c7a986f05185e93030" kindref="member">memcmp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenght);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_8c_1a6013d212af290371b041dd46cae9c9db" kindref="member">memcpy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lenght);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="utils_8c_1a9896699f331c8da8f438f606832f31db" kindref="member">strlen</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="utils_8c_1a57b18ef9eecf3a059b3138b3806868bb" kindref="member">strcmp</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str1,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str2);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_8c_1af9af30bd4e6b10d1560aabd834144e33" kindref="member">strcpy</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_8c_1a01264c39e4ef8945e436d9a9a51e3ff1" kindref="member">strreverse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>begin,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_8c_1a0338f8f78dbf81dc70849a16e3ec22bb" kindref="member">itoa</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/phra/Desktop/progetto_so/src/lib/utils.h"/>
  </compounddef>
</doxygen>
